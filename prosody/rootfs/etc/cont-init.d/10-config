#!/usr/bin/with-contenv bash

PROSODY_CFG="/config/prosody.cfg.lua"
PROSODY_SITE_CFG="jitsi-meet.cfg.lua"

# Создание директорий и настройка прав
mkdir -p /config/data /config/certs /config/conf.d /config/data/auth.meet.jitsi/accounts
chown -R prosody:prosody /config
chmod 750 /config/data
chmod 700 /config/data/auth.meet.jitsi/accounts

cp -rn /defaults/* /config

# Установка режима Prosody
[ -z "$PROSODY_MODE" ] && export PROSODY_MODE="client"
if [[ "$PROSODY_MODE" == "visitors" ]]; then
    echo "Prosody visitor mode, using alternate config"
    PROSODY_SITE_CFG="visitors.cfg.lua"
    rm /config/conf.d/jitsi-meet.cfg.lua
    rm /config/conf.d/brewery.cfg.lua
elif [[ "$PROSODY_MODE" == "brewery" ]]; then
    echo "Prosody brewery mode, using alternate config"
    PROSODY_SITE_CFG="brewery.cfg.lua"
    rm /config/conf.d/jitsi-meet.cfg.lua
    rm /config/conf.d/visitors.cfg.lua
else
    echo "Prosody normal mode, using default config"
    PROSODY_SITE_CFG="jitsi-meet.cfg.lua"
    rm /config/conf.d/visitors.cfg.lua
    rm /config/conf.d/brewery.cfg.lua
fi

# Проверка обязательных переменных
if [[ -z $JICOFO_AUTH_PASSWORD ]]; then echo 'FATAL ERROR: Jicofo auth password must be set'; exit 1; fi
if [[ -z $JVB_AUTH_PASSWORD ]]; then echo 'FATAL ERROR: JVB auth password must be set'; exit 1; fi
if [[ -z $XMPP_DOMAINS ]]; then echo 'FATAL ERROR: XMPP_DOMAINS must be set'; exit 1; fi

# Получение первого домена из XMPP_DOMAINS
IFS=',' read -r -a DOMAINS <<< "$XMPP_DOMAINS"
FIRST_DOMAIN="${DOMAINS[0]}"

# Подстановка переменных в prosody.cfg.lua
sed -e "s|\${XMPP_AUTH_DOMAIN}|${XMPP_AUTH_DOMAIN:-auth.meet.jitsi}|g" \
    -e "s|\${XMPP_DOMAINS}|${XMPP_DOMAINS}|g" \
    -e "s|\${XMPP_DOMAINS%%,\*}|${FIRST_DOMAIN}|g" \
    /defaults/prosody.cfg.lua > "$PROSODY_CFG"

# Подстановка переменных в jitsi-meet.cfg.lua
sed -e "s|\${XMPP_AUTH_DOMAIN}|${XMPP_AUTH_DOMAIN:-auth.meet.jitsi}|g" \
    -e "s|\${XMPP_RECORDER_DOMAIN}|${XMPP_RECORDER_DOMAIN:-recorder.meet.jitsi}|g" \
    /defaults/$PROSODY_SITE_CFG > "/config/conf.d/$PROSODY_SITE_CFG"

# Генерация сертификатов
for DOMAIN in "${DOMAINS[@]}" auth.meet.jitsi; do
    if [[ ! -f /config/certs/$DOMAIN.crt ]]; then
        echo "Generating certificate for $DOMAIN"
        prosodyctl --config "$PROSODY_CFG" cert generate "$DOMAIN"
        cp /var/lib/prosody/"$DOMAIN.crt" /config/certs/"$DOMAIN.crt"
        cp /var/lib/prosody/"$DOMAIN.key" /config/certs/"$DOMAIN.key"
        chown prosody:prosody /config/certs/"$DOMAIN".{crt,key}
        chmod 640 /config/certs/"$DOMAIN".{crt,key}
    fi
done

chown prosody:prosody "$PROSODY_CFG" /config/data/auth.meet.jitsi/accounts
chmod 644 "$PROSODY_CFG"
chmod 700 /config/data/auth.meet.jitsi/accounts
